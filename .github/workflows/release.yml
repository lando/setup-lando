name: Release

on:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        node-version:
          - '18'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install
      - name: Lint
        run: npm run lint
      - name: Export formatted release date
        run: echo "RELEASE_DATE=$(date -d "${{ github.event.release.published_at }}" "+%B %e, %Y" | tr -s ' ')" >> $GITHUB_ENV
      - name: Prepare release
        uses: lando/prepare-release-action@v3
        env:
          SCRIPT_VERSION: ${{ github.event.release.tag_name }}
        with:
          commands: npm run prepare
          sync-tags: v3
          sync-token: ${{ secrets.RTFM47_COAXIUM_INJECTOR }}
          sync-email: rtfm47@lando.dev
          sync-username: rtfm-47
          update-files: CHANGELOG.md
          update-files-header: |
            ## {{ UNRELEASED_VERSION }} - [{{ UNRELEASED_DATE }}]({{ UNRELEASED_LINK }})
          update-files-meta: |
            UNRELEASED_DATE=${{ env.RELEASE_DATE }}
            UNRELEASED_LINK=${{ github.event.release.html_url }}
            UNRELEASED_VERSION=${{ github.event.release.tag_name }}
  build-windows:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Visual Studio Developer Command Prompt
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Build Windows executables
        run: |
          cd packages/winget
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          .\build.ps1 -Version $version
        shell: pwsh

      - name: Upload x64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./packages/winget/setup-lando-win-x64.exe
          asset_name: setup-lando-win-x64.exe
          asset_content_type: application/octet-stream

      - name: Upload ARM64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./packages/winget/setup-lando-win-arm64.exe
          asset_name: setup-lando-win-arm64.exe
          asset_content_type: application/octet-stream
